import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import localFont from "next/font/local";
import NextTopLoader from 'nextjs-toploader';
import "./globals.css";
import Layout from "@/components/hoc/Layout";

// Local heading font: Zodiak (variable + static weights for reliable mapping)
const headingFont = localFont({
  src: [
    { path: "../assets/fonts/zodiak/Zodiak-Variable.woff2", style: "normal", weight: "100 900" },
    { path: "../assets/fonts/zodiak/Zodiak-VariableItalic.woff2", style: "italic", weight: "100 900" },
    { path: "../assets/fonts/zodiak/Zodiak-Thin.woff2", style: "normal", weight: "100" },
    { path: "../assets/fonts/zodiak/Zodiak-Light.woff2", style: "normal", weight: "300" },
    { path: "../assets/fonts/zodiak/Zodiak-Regular.woff2", style: "normal", weight: "400" },
    { path: "../assets/fonts/zodiak/Zodiak-Bold.woff2", style: "normal", weight: "700" },
    { path: "../assets/fonts/zodiak/Zodiak-Black.woff2", style: "normal", weight: "900" },
  ],
  display: "swap",
  variable: "--font-heading",
});

// Local body font: CabinetGrotesk (static weights)
const bodyFont = localFont({
  src: [
    { path: "../assets/fonts/cabinet-grotesk/CabinetGrotesk-Thin.otf", weight: "100", style: "normal" },
    { path: "../assets/fonts/cabinet-grotesk/CabinetGrotesk-Extralight.otf", weight: "200", style: "normal" },
    { path: "../assets/fonts/cabinet-grotesk/CabinetGrotesk-Light.otf", weight: "300", style: "normal" },
    { path: "../assets/fonts/cabinet-grotesk/CabinetGrotesk-Regular.otf", weight: "400", style: "normal" },
    { path: "../assets/fonts/cabinet-grotesk/CabinetGrotesk-Medium.otf", weight: "500", style: "normal" },
    { path: "../assets/fonts/cabinet-grotesk/CabinetGrotesk-Bold.otf", weight: "700", style: "normal" },
    { path: "../assets/fonts/cabinet-grotesk/CabinetGrotesk-Extrabold.otf", weight: "800", style: "normal" },
    { path: "../assets/fonts/cabinet-grotesk/CabinetGrotesk-Black.otf", weight: "900", style: "normal" },
  ],
  display: "swap",
  variable: "--font-body",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${headingFont.variable} ${bodyFont.variable} antialiased`}
      >
        <NextTopLoader />
        <Layout>
          {children}
        </Layout>
      </body>
    </html>
  );
}
